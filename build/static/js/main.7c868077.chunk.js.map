{"version":3,"sources":["components/Calculator.js","components/InfoAboutApp.js","App.js","registerServiceWorker.js","index.js"],"names":["digits","operators","maxCharsAtFullSize","scaleFactor","maxPrecision","CalculatorDisplay","props","scaleDown","value","pointAt","concat","indexOf","decimalValue","substring","math","eval","length","precisionWithFraction","formattedValue","parseFloat","toLocaleString","undefined","minimumFractionDigits","toExponential","react_default","a","createElement","className","style","transform","Calculator","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","displayValue","operator","waitingForOperand","firstOperand","clearAll","handleClick","bind","assertThisInitialized","newKeyValue","_this$state","setState","newDisplayValue","_this$state2","newOperator","stringToEvaluate","e","_this$state3","needPoint","toPrecision","console","log","processClear","processPlusMinusToggle","processPoint","processPercentage","processUnknownKey","processNewKey","target","isDigit","includes","isOperator","processDigit","processOperator","processFunctionKey","id","onClick","Component","InfoAboutApp","href","App","components_InfoAboutApp","components_Calculator","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7c868077.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport math from 'mathjs';\n\n/* Constants */\nconst digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\nconst operators = ['/', '*', '-', '+', '='];\n\n/* Only 6 characters can be displayed at the optimal full size.\nIf the character string is longer, we need to scale the display down */\nconst maxCharsAtFullSize = 6;\nconst scaleFactor = 'scale(0.36)';\n\n/* Allow maximum of 16 digits afterthe decimal point */\nconst maxPrecision = 16;\n\n/* Components */\nfunction CalculatorDisplay(props) {\n  const value = props.value;\n  const pointAt = `${value}`.indexOf('.');\n  const decimalValue = value.substring(pointAt, math.eval(value.length));\n  const precisionWithFraction = (pointAt === -1 )?0:math.eval(decimalValue.length - 1);\n  let formattedValue = null;\n  let scaleDown = null;\n\n  formattedValue = parseFloat(value).toLocaleString(undefined, {minimumFractionDigits: precisionWithFraction}); // take the default locale formatting\n  if (formattedValue === 'NaN') { //account for errors\n    formattedValue = 'Error';\n  } else {\n    if (formattedValue.length > (maxPrecision - 1)) {\n      formattedValue = parseFloat(value).toExponential(maxPrecision - 4); // Allow at least 4 characters (for scientific notation e.g. e+14) in the output string\n      if (formattedValue === 'NaN') { //account for overflow\n        formattedValue = 'Overflow\\xA0Error';\n      }\n    }\n  }\n  scaleDown = (`${formattedValue}`.length) > maxCharsAtFullSize ? scaleFactor : 'scale(1)';\n  return (\n    <div className=\"calculator-display\">\n      <div className=\"auto-scaling-text\" style={{transform: scaleDown}}>\n        {formattedValue}\n        </div>\n      </div>\n    );\n}\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayValue: '0',\n      operator: null,\n      waitingForOperand: false,\n      firstOperand: '0',\n      clearAll: true\n    };\n    // This binding is necessary to make `this` work in the callback\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  processDigit(newKeyValue) {\n    const { displayValue, waitingForOperand } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({displayValue: `${newKeyValue}`, waitingForOperand: false, clearAll: false});\n    } else {\n      let newDisplayValue = (displayValue === '0')?`${newKeyValue}`:`${(displayValue)}${newKeyValue}`; //no leading zero\n      this.setState({displayValue: `${newDisplayValue}`, waitingForOperand: false, clearAll: false});\n    }\n  }\n\n  processOperator(newKeyValue) {\n    const { displayValue, operator, waitingForOperand, firstOperand } = this.state;\n    let newDisplayValue = null;\n    let newOperator = null;\n    let stringToEvaluate = null;\n\n    if (firstOperand === '0' || operator == null || waitingForOperand) { // if not ready to do calculation\n      this.setState({waitingForOperand: true, firstOperand: displayValue, operator: newKeyValue, clearAll: false});\n      return;\n    } else {\n      stringToEvaluate = `${firstOperand}${operator}${displayValue}`;\n      try {\n        newDisplayValue = `${math.eval(stringToEvaluate)}`\n      } catch (e) {\n        newDisplayValue = 'Error';\n      }\n      if (newDisplayValue === \"Infinity\") { //math.js evaluates division by 0 to be \"Infinity\"\n        newDisplayValue = 'Error';\n      }\n      newOperator = (newKeyValue === \"=\")? null: newKeyValue;\n      this.setState({displayValue: `${newDisplayValue}`, waitingForOperand: true, firstOperand: `${newDisplayValue}`, operator: newOperator, clearAll: false})\n    }\n  }\n\n  processPoint(newKeyValue) {\n    const { displayValue, waitingForOperand } = this.state;\n    const needPoint = `${displayValue}`.indexOf('.')===-1?true:false;\n    let newDisplayValue = null;\n\n    if (waitingForOperand) { // allow point if starting on a new operand\n      this.setState({displayValue: '0.', waitingForOperand: false, clearAll: false})\n    } else {\n      if (needPoint) { //if not inputting new operand, only allow point if it's not already present\n        newDisplayValue = `${displayValue}${newKeyValue}`;\n        this.setState({displayValue: `${newDisplayValue}`, waitingForOperand: false, clearAll: false})\n      }\n    }\n  }\n\n  processPercentage(newKeyValue) {\n    const { displayValue } = this.state;\n    const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) / 100;\n    this.setState({displayValue: `${newDisplayValue}`, waitingForOperand: false, clearAll: false});\n  }\n\n  processPlusMinusToggle(newKeyValue) {\n    const { displayValue } = this.state;\n    const newDisplayValue = parseFloat(displayValue).toPrecision(maxPrecision) * -1\n    this.setState({displayValue: `${newDisplayValue}`, waitingForOperand: false, clearAll: false})\n  }\n\n  processClear() {\n    const { clearAll } = this.state;\n    console.log('clearAll', clearAll);\n    if ( clearAll ) {\n      this.setState({displayValue: '0', firstOperand: '0', operator: null, waitingForOperand: false, clearAll: true})\n    } else {\n      this.setState({displayValue: '0', clearAll: true})\n    }\n  }\n\n\n  processUnknownKey(newKeyValue) {\n    /* don't do anything, just write the error to the console log */\n    console.log('Unexpected input: ', newKeyValue);\n  }\n\n  processFunctionKey(newKeyValue) {\n    switch (newKeyValue) {\n      case \"C\":\n        this.processClear(newKeyValue);\n        break;\n      case \"±\":\n        this.processPlusMinusToggle(newKeyValue);\n        break;\n      case \".\":\n        this.processPoint(newKeyValue);\n        break;\n      case \"%\":\n        this.processPercentage(newKeyValue);\n        break;\n      default:\n        this.processUnknownKey(newKeyValue);\n    }\n  }\n\n  handleClick(e) {\n    this.processNewKey(`${e.target.value}`);\n  }\n\n  processNewKey(newKeyValue) {\n    const isDigit = digits.includes(newKeyValue);\n    const isOperator = operators.includes(newKeyValue);\n\n    if (isDigit) {\n      this.processDigit(newKeyValue);\n    } else {\n      if (isOperator) {\n        this.processOperator(newKeyValue);\n      } else {\n        this.processFunctionKey(newKeyValue);\n      }\n    }\n  }\n\n  render() {\n    return (<div className=\"calculator\">\n      <CalculatorDisplay value={this.state.displayValue}/>\n\n      <div className=\"calculator-keypad\">\n        <div className=\"input-keys\">\n          <div className=\"function-keys\">\n            <button id=\"key-clear\" value=\"C\" className=\"calculator-key key-clear\" onClick={this.handleClick}>{this.state.clearAll?'AC':'C'}</button>\n            <button id=\"key-sign\" value=\"±\" className=\"calculator-key key-sign\" onClick={this.handleClick}>&plusmn;</button>\n            <button id=\"key-percent\" value=\"%\" className=\"calculator-key key-percent\" onClick={this.handleClick}>%</button>\n          </div>\n\n          <div className=\"digit-keys\">\n            <button id=\"key-0\" value=\"0\" className=\"calculator-key key-0\" onClick={this.handleClick}>0</button>\n            <button id=\"key-dot\" value=\".\" className=\"calculator-key key-dot\" onClick={this.handleClick}>&middot;</button>\n            <button id=\"key-1\" value=\"1\" className=\"calculator-key key-1\" onClick={this.handleClick}>1</button>\n            <button id=\"key-2\" value=\"2\" className=\"calculator-key key-2\" onClick={this.handleClick}>2</button>\n            <button id=\"key-3\" value=\"3\" className=\"calculator-key key-3\" onClick={this.handleClick}>3</button>\n            <button id=\"key-4\" value=\"4\" className=\"calculator-key key-4\" onClick={this.handleClick}>4</button>\n            <button id=\"key-5\" value=\"5\" className=\"calculator-key key-5\" onClick={this.handleClick}>5</button>\n            <button id=\"key-6\" value=\"6\" className=\"calculator-key key-6\" onClick={this.handleClick}>6</button>\n            <button id=\"key-7\" value=\"7\" className=\"calculator-key key-7\" onClick={this.handleClick}>7</button>\n            <button id=\"key-8\" value=\"8\" className=\"calculator-key key-8\" onClick={this.handleClick}>8</button>\n            <button id=\"key-9\" value=\"9\" className=\"calculator-key key-9\" onClick={this.handleClick}>9</button>\n          </div>\n        </div>\n\n        <div className=\"operator-keys\">\n          <button id=\"key-divide\" value=\"/\" className=\"calculator-key key-divide\" onClick={this.handleClick}>&divide;</button>\n          <button id=\"key-multiply\" value=\"*\" className=\"calculator-key key-multiply\" onClick={this.handleClick}>&times;</button>\n          <button id=\"key-subtract\" value=\"-\" className=\"calculator-key key-subtract\" onClick={this.handleClick}>&ndash;</button>\n          <button id=\"key-add\" value=\"+\" className=\"calculator-key key-add\" onClick={this.handleClick}>+</button>\n          <button id=\"key-equals\" value=\"=\" className=\"calculator-key key-equals\" onClick={this.handleClick}>=</button>\n        </div>\n      </div>\n    </div>)\n  }\n}\n\nexport default Calculator;\n","import React, {Component} from 'react';\n\nclass InfoAboutApp extends Component {\n  render() {\n    return (<header className=\"App-header\">\n      <h1 className=\"App-title\">React Calculator</h1>\n      <div className=\"App-intro\">\n        Calculator built with React.js v16, see the&nbsp;\n        <a href=\"https://github.com/TattyFromMelbourne/react-calculator\" target=\"_new\">GitHub repo</a>.\n      </div>\n    </header>);\n  }\n}\n\nexport default InfoAboutApp;\n","import React, {Component} from 'react';\nimport Calculator from \"./components/Calculator\";\nimport InfoAboutApp from \"./components/InfoAboutApp\";\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (<div className=\"App\">\n      <InfoAboutApp/>\n      <div id=\"wrapper\">\n        <div id=\"calculator-wrapper\">\n          <Calculator/>\n        </div>\n      </div>\n    </div>);\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}